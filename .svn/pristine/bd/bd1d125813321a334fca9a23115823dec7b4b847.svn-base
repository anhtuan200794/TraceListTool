using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Drawing;
using System.Text;
using System.Windows.Forms;

namespace TraceList
{
    public partial class GridViewForm : Form
    {
        public FileProcess fileProcess;

        public GridViewForm()
        {
            InitializeComponent();
            fileProcess = new FileProcess();
        }

        private void TraceForm_Resize(object sender, EventArgs e)
        {
            dgvGridViewList.Width = this.Width - 10;
            dgvGridViewList.Height = this.Height - 30;
        }

        private void copyToolStripMenuItem_Click(object sender, EventArgs e)
        {
            
            if (dgvGridViewList.SelectedCells.Count <= 0)
            {
                MessageBox.Show("No cells are selected ");
                return;
            }
            Clipboard.Clear();
            string sout = "";
            for (int i = 0; i < dgvGridViewList.SelectedCells.Count; i++)
            {
                sout += String.IsNullOrEmpty(sout) ? dgvGridViewList.SelectedCells[i].Value.ToString() : "\t" + dgvGridViewList.SelectedCells[i].Value.ToString();
            }

            Clipboard.SetText(sout);
        }

        private void copyRowToolStripMenuItem_Click(object sender, EventArgs e)
        {
            if (dgvGridViewList.SelectedRows.Count <= 0)
            {
                MessageBox.Show("No rows are selected ");
                return;
            }
            
            Clipboard.Clear();
            string sout = "";
            
            for (int i = 0; i < dgvGridViewList.SelectedRows.Count; i++)
            {
                string srow = "";
                DataGridViewRow row = dgvGridViewList.SelectedRows[i];
                for (int j = 0; j < row.Cells.Count; j++)
                {
                    srow += srow == "" ? Convert.ToString(row.Cells[j].Value) : "\t" + Convert.ToString(row.Cells[j].Value);
                }
                sout += srow + "\n";
            }
            Clipboard.SetText(sout);
        }

        internal void ProcessMessageFile(string[] filePath, string cssDevice, bool useDecimal)
        {
            fileProcess.CssDevice = cssDevice;
            fileProcess.UseDecimal = useDecimal;
            dgvGridViewList.DataSource = null;
            dgvGridViewList.DataSource = fileProcess.ProcessMessageFile(filePath);
        }

        internal void ProcessEdcFiles(string filepath, bool useDecimal)
        {
            fileProcess.UseDecimal = useDecimal;
            dgvGridViewList.DataSource = null;
            dgvGridViewList.DataSource = fileProcess.ProcessEdcFile(filepath);
        }

        private void contextMenuStrip_Opening(object sender, CancelEventArgs e)
        {
            copyToolStripMenuItem.Enabled = dgvGridViewList.SelectedCells.Count > 0;
            copyRowToolStripMenuItem.Enabled = dgvGridViewList.SelectedRows.Count > 0;     
        }

        private void showToolStripMenuItem_Click(object sender, EventArgs e)
        {
            string messageTrackerString = "";
            messageTrackerString = fileProcess.GetTransMessageTracker(dgvGridViewList.SelectedCells[0].RowIndex, true);
            MessageBox.Show(messageTrackerString, "Message Tracker");
        }

        private void toClipboardToolStripMenuItem_Click(object sender, EventArgs e)
        {
            string messageTrackerString = "";
            Clipboard.Clear();
            messageTrackerString = fileProcess.GetTransMessageTracker(dgvGridViewList.SelectedCells[0].RowIndex, false);
            if (!String.IsNullOrEmpty(messageTrackerString))
            {
                Clipboard.SetText(messageTrackerString);
                MessageBox.Show("Copied to clipboard", "Done!");
            }
            else
            {
                MessageBox.Show("No more information", "Done!");
            }
        }

        private void toScreenToolStripMenuItem_Click(object sender, EventArgs e)
        {
            string errorString = "";
            errorString = fileProcess.GetTransErrorString(dgvGridViewList.SelectedCells[0].RowIndex);
            MessageBox.Show(errorString);
        }

        private void toClipboardToolStripMenuItem1_Click(object sender, EventArgs e)
        {
            string messageTrackerString = "";
            Clipboard.Clear();
            messageTrackerString = fileProcess.GetTransErrorString(dgvGridViewList.SelectedCells[0].RowIndex);
            if (!String.IsNullOrEmpty(messageTrackerString))
            {
                Clipboard.SetText(messageTrackerString);
                MessageBox.Show("Copied to clipboard", "Done!");
            }
            else
            {
                MessageBox.Show("No more information", "Done!");
            }
        }

        private void dgvGridViewList_MouseDown(object sender, MouseEventArgs e)
        {
            if (e.Button == MouseButtons.Right)
            {
                DataGridView.HitTestInfo cellInfo = dgvGridViewList.HitTest(e.X, e.Y);
                if (cellInfo.ColumnIndex > -1 && cellInfo.RowIndex > -1)
                {
                    // dgvTraceList.Rows[cellInfo.RowIndex].Cells[cellInfo.ColumnIndex].Selected = true;
                    // Check if this cell selected already
                    if (!dgvGridViewList.SelectedCells.Contains(dgvGridViewList.Rows[cellInfo.RowIndex].Cells[cellInfo.ColumnIndex]))
                    {
                        for (int i = 0; i < dgvGridViewList.SelectedCells.Count; i++)
                        {
                            dgvGridViewList.SelectedCells[i].Selected = false;
                        }
                        dgvGridViewList.Rows[cellInfo.RowIndex].Cells[cellInfo.ColumnIndex].Selected = true;
                    }
                }
            }
        }
    }
}